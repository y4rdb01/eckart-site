<!doctype HTML public "-//W3C//DTD HTML 3.2//EN">
<html lang="en">
<head>
<title>Dr. J Dana Eckart</title>
<link rev="mail" href="mailto:eckart_dana@columbusstate.edu">
</head>
<body>

<!--
	This is the primary overall style for the web site.
-->
<style>
	A:link    { color: #007a00; text-decoration: underline }
	A:visited { color: #7a0000; text-decoration: none }
	A:hover   { text-decoration: none }
	A:active  { color: #ff0000; text-decoration: none }
	Body	{ background-color: #ffffe5; color: #000000 }
	Body	{ font-size: 12pt }
	Address	{ font-size: 10pt }
	Table	{ font-size: 12pt }
	Th, Td	{ vertical-align: top }
	Th, Td	{ padding: 5px }
</style>

<p style="text-align: center; margin: auto; font-size: 150%">
	<strong>Dr. J Dana Eckart</strong>: Programming Languages (CPSC 5135)
	- Lisp
</p>

<ol>
<li> <em>Lis</em>t <em>P</em>rocessing (or <em>L</em>ots of <em>I</em>nsipid and <em>S</em>tupid <em>P</em>arenthesies)
<li> Common Lisp is the language used to implement the airfare search and
	pricing system developed by
	<a href="https://en.wikipedia.org/wiki/ITA_Software">ITA</a>.
	ITA was founded in 1996 and acquired by Google in 2011.
<li> Functional language with Polish prefix notation (as opposed to RPN and in-fix)
<li> Basic Language Elements (pure functional):
	<ol>
	<li> Comments: start with ';' and extend to EOL
	<li> Base value types and functions: atom, numberp, stringp, null
	<li> Lists: car, cdr, cons, list, nil
	<li> Math: +, -, *, /, rem
	<li> Comparison: eq (shallow), equal (deep), =, <, >, <=, >=, zerop
	<li> Logic: t, nil, and, or, not
	<li> Decision: cond
	<li> Functions: defun, lambda, eval
	<li> Output: print (ends output with a new-line), write (no new-line added after output), <a href="http://www.n-a-n-o.com/lisp/cmucl-tutorials/LISP-tutorial-8.html">format</a> [ To print a space with no new-line use (format t " ")
		but be warned that this returns nil.]
	<li> "variable" declarations: let (lexically scope), defvar (dynamically scope) [See the <a href="http://www.emacswiki.org/emacs/DynamicBindingVsLexicalBinding#toc2">difference</a>.]
	<li> Others: append, reverse, member, intersection, union, set-difference, subsetp, mapcar
	<li> Debugging aid(s): trace, untrace
	</ol>
<li> Additional Resources:
	<ol>
	<li> <a href="http://www.cs.cmu.edu/~dst/LispBook/book.pdf">COMMON LISP: A Gentle Introduction to Symbolic Computation</a>
	</ol>
<li> My <a href="http://xkcd.com/297">personal feelings</a> regarding Lisp, though I fear many people view Lisp <a href="http://xkcd.com/224">this way</a> instead.
<li> Test your understanding of the above by answering these
	<a href="../questions/questions_03.html">self-assessment questions</a>.
</ol>

<hr/>
<em>
<a href="mailto:eckart_dana@columbusstate.edu?subject=web_pages" style="float: left">eckart_dana@columbusstate.edu</a>
<a href="/eckart/classes/cpsc5135" style="float: right">CPSC 5135</a>
</em>

</body>
</html>

