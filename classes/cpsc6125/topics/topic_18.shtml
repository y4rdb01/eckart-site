<!doctype HTML public "-//W3C//DTD HTML 3.2//EN">
<html lang="en">
<head>
<title>Dr. J Dana Eckart</title>
<link rev="mail" href="mailto:eckart_dana@columbusstate.edu">
</head>
<body>

<!--
	This is the primary overall style for the web site.
-->
<style>
	A:link    { color: #007a00; text-decoration: underline }
	A:visited { color: #7a0000; text-decoration: none }
	A:hover   { text-decoration: none }
	A:active  { color: #ff0000; text-decoration: none }
	Body	{ background-color: #ffffe5; color: #000000 }
	Body	{ font-size: 12pt }
	Address	{ font-size: 10pt }
	Table	{ font-size: 12pt }
	Th, Td	{ vertical-align: top }
	Th, Td	{ padding: 5px }
</style>

<p style="text-align: center; margin: auto; font-size: 150%">
	<strong>Dr. J Dana Eckart</strong>: Advanced Operating Systems (CPSC 6125)
	- IPC: Barriers
</p>

<ol>
<li> Solves a different kind of synchronization problem, one in
	which a group of actors should finish a particular (often
	common) task before going on to the next thing.
<li> An example of this would be a multi-threaded
	<a href="/eckart/classes/cpsc5135/topics/topic_53.shtml">cellular automata</a>
	in which each slice of the "universe" is calculated by a
	different thread/process. All the threads must finish
	their computations before the next time step iteration can
	begin.
<li> If all of the threads should take close to the same amount of time,
	then spin locks can be a good way of implementing a barrier.
<li> Test your understanding of the above by answering these
	<a href="/eckart/classes/cpsc3125/questions/questions_18.html">self-assessment questions</a>.
</ol>


<hr/>
<em>
<a href="mailto:eckart_dana@columbusstate.edu?subject=web_pages" style="float: left">eckart_dana@columbusstate.edu</a>
<a href="/eckart/classes/cpsc6125" style="float: right">CPSC 6125</a>
</em>

</body>
</html>

